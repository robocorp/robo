name: Build CLI signed binaries

on:
  push:
    branches:
      - "master"
    paths:
      - "cli/**"
      - ".github/workflows/golang_build.yml"
  pull_request:
    branches:
      - "master"
    paths:
      - "cli/**/"
      - ".github/workflows/golang_build.yml"
  workflow_dispatch:


jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./cli
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache-dependency-path: go.sum

      - name: setup invoke
        run: pipx install invoke


      - name: Build
        run: invoke build-all-platforms


      - uses: actions/upload-artifact@v3
        with:
          name: robo-artifacts
          path: ./build/**/robo


      - uses: maxim-lobanov/setup-xcode@v1
        if: matrix.os == 'macos-latest'
        with:
          xcode-version: latest-stable

      - name: MacOS igning
        if: matrix.os == 'macos-latest'
        run: invoke sign-macos
        env:
            MACOS_SIGNING_CERT: ${{ secrets.MACOS_SIGNING_CERT }}
            MACOS_SIGNING_CERT_PASSWORD: ${{ secrets.MACOS_SIGNING_CERT_PASSWORD }}
      - name: MacOS Notarizing
        if: matrix.os == 'macos-latest'
        # TODO: pass secrets as arguments
        run: invoke notarize-macos
        env:
            MACOS_APP_ID_FOR_SIGNING: ${{ secrets.MACOS_APP_ID_FOR_SIGNING }}
            MACOS_APP_ID_PASS_FOR_SIGNING: ${{ secrets.MACOS_APP_ID_PASS_FOR_SIGNING }}

      - uses: actions/upload-artifact@v3
        if: matrix.os == 'macos-latest'
        with:
          name: robo-signed
          path: cli/dist/build/macos64/robo
