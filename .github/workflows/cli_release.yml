name: CLI Release

on:
  push:
    tags:
      - "cli-[0-9]+.[0-9]+.[0-9]+"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub release
        uses: Roang-zero1/github-create-release-action@v3
        with:
          version_regex: cli-[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+
          release_title: ${{ github.ref_name }}
          # TODO: once we have a changelog, add the URL
          release_text: Binaries available as assets. Run `<executable_name> help` for usage instructions.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs:
      - release
    defaults:
      run:
        working-directory: ./cli
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache-dependency-path: cli/go.sum
      - name: setup invoke
        run: pipx install invoke

      - name: Build
        run: invoke crossbuild

      - uses: actions/upload-artifact@v3
        with:
          name: robo-unsigned-artifacts
          path: cli/build/

      - name: Upload ubuntu binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: cli/build/linux64/robo
          asset_name: robo-$tag-ubuntu64
          tag: ${{ github.ref }}
          overwrite: true

  sign-macos:
    needs:
      - release
      - build
    defaults:
      run:
        working-directory: ./cli
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
            name: robo-unsigned-artifacts
            path: cli/build

      - name: setup invoke
        run: pipx install invoke

      - uses: maxim-lobanov/setup-xcode@v1
        if: matrix.os == 'macos-latest'
        with:
          xcode-version: latest-stable

      - name: MacOS igning
        run: invoke macos-sign
        env:
            MACOS_SIGNING_CERT: ${{ secrets.MACOS_SIGNING_CERT }}
            MACOS_SIGNING_CERT_PASSWORD: ${{ secrets.MACOS_SIGNING_CERT_PASSWORD }}
      - name: MacOS Notarizing
        # TODO: pass secrets as arguments
        run: invoke macos-notarize
        env:
            MACOS_APP_ID_FOR_SIGNING: ${{ secrets.MACOS_APP_ID_FOR_SIGNING }}
            MACOS_APP_ID_PASS_FOR_SIGNING: ${{ secrets.MACOS_APP_ID_PASS_FOR_SIGNING }}

      - uses: actions/upload-artifact@v3
        with:
          name: robo-signed-macos
          path: cli/dist/build/macos64/robo

      - name: Upload macOS binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: cli/dist/build/macos64/robo
          asset_name: robo-$tag-macos64
          tag: ${{ github.ref }}
          overwrite: true

  sign-windows:
    needs:
      - release
      - build
    defaults:
      run:
        working-directory: ./cli
    runs-on: windows-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
            name: robo-unsigned-artifacts
            path: cli/build
      - name: Setup AzureSignTool
        shell: powershell
        run: |
          dotnet tool install --global AzureSignTool --version 3.0.0
      - name: Windows signing
        env:
          VAULT_URL: ${{secrets.WIN_SIGN_AZURE_KEY_VAULT_URL}}
          CLIENT_ID: ${{secrets.WIN_SIGN_AZURE_KEY_VAULT_CLIENT_ID}}
          TENANT_ID: ${{secrets.WIN_SIGN_AZURE_KEY_VAULT_TENANT_ID}}
          CLIENT_SECRET: ${{secrets.WIN_SIGN_AZURE_KEY_VAULT_CLIENT_SECRET}}
          CERTIFICATE: ${{secrets.WIN_SIGN_AZURE_KEY_VAULT_CERTIFICATE}}
        run: azuresigntool sign --description-url "https://robocorp.com" --file-digest sha256 --azure-key-vault-url $Env:VAULT_URL --azure-key-vault-client-id $Env:CLIENT_ID --azure-key-vault-tenant-id $Env:TENANT_ID --azure-key-vault-client-secret $Env:CLIENT_SECRET --azure-key-vault-certificate $Env:CERTIFICATE --timestamp-rfc3161 http://timestamp.digicert.com --timestamp-digest sha256 build\windows64\robo.exe
            # ARM signing for future
            # azuresigntool sign --description-url "https://robocorp.com" --file-digest sha256 --azure-key-vault-url $Env:VAULT_URL --azure-key-vault-client-id $Env:CLIENT_ID --azure-key-vault-tenant-id $Env:TENANT_ID --azure-key-vault-client-secret $Env:CLIENT_SECRET --azure-key-vault-certificate $Env:CERTIFICATE --timestamp-rfc3161 http://timestamp.digicert.com --timestamp-digest sha256 build\windows64\arm\robo.exe
        shell: powershell

      - uses: actions/upload-artifact@v3
        with:
            name: robo-signed
            path: cli/build/windows64/robo.exe

      - name: Upload windows binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: cli/build/windows64/robo.exe
          asset_name: robo-$tag-windows64.exe
          tag: ${{ github.ref }}
          overwrite: true
