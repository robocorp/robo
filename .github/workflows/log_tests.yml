name: Log Tests

on:
  push:
    branches:
      - "master"
    paths:
      - "log/**"
      - ".github/workflows/log_tests.yml"
  pull_request:
    branches:
      - "master"
    paths:
      - "log/**"
      - ".github/workflows/log_tests.yml"

defaults:
  run:
    working-directory: './log'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        name: [
          "ubuntu-py39-outviewintegrationtests",
          "windows-py310",
          "ubuntu-py311",
        ]

        include:
          - name: "ubuntu-py39-outviewintegrationtests"
            python: "3.9"
            os: ubuntu-latest
          - name: "windows-py310"
            python: "3.10"
            os: windows-latest
          - name: "ubuntu-py311"
            python: "3.11"
            os: ubuntu-latest


    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v3

    - name: Install poetry
      run: pipx install poetry

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
        cache-dependency-path: cli/go.sum

    - name: setup invoke
      run: pipx install invoke

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
        cache: 'poetry'

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16.x
        registry-url: "https://npm.pkg.github.com"
        scope: "@robocorp"

    - name: Install project
      run: poetry install

    - name: npm ci
      working-directory: ./log/output-react/
      run: |
        npm ci
        npm run build:tests
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
      
    - name: Print robocorp-log info and build the output view.
      run: |
        poetry run python -m invoke build-output-view-react
      env:
        CI: true
        NODE_AUTH_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

    - name: Test
      working-directory: ./log/tests
      env:
        PYTHONPATH: .
        RUN_TESTS_TIMEOUT: 10000
        GITHUB_ACTIONS_MATRIX_NAME: ${{ matrix.name }}
      run: poetry run pytest -rfE -vv .

    - uses: actions/upload-artifact@v3
      if: always() && contains(matrix.name, '-outviewintegrationtests')
      with:
        name: robo_log_react.${{ matrix.name }}.html
        path: log/output-react/tests_robo/output/log.html
